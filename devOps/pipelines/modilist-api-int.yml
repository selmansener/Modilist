# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
   include:
     - main
  paths:
    include:
      - src/backend/Modilist/*
    

pool:
  vmImage: windows-latest

steps:
  - task: DotNetCoreCLI@2
    displayName: Publish WebAPI
    inputs:
      command: 'publish'
      publishWebProjects: true
      workingDirectory: '$(System.DefaultWorkingDirectory)\src\backend\Modilist\Modilist.API'
  - task: AzureRmWebAppDeployment@4
    displayName: Deploy WebAPI
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Microsoft Azure Sponsorship(cd6bc22e-8b3a-4c6e-9c03-03152a8567ea)'
      appType: 'webAppLinux'
      WebAppName: 'app-modilist-int-westeu'
      packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
      RuntimeStack: 'DOTNETCORE|6.0'
  - task: DotNetCoreCLI@2
    displayName: Publish Functions
    inputs:
      command: 'publish'
      publishWebProjects: true
      arguments: '-o $(System.DefaultWorkingDirectory)\Modilist.Functions.ScheduledJobs\'
      workingDirectory: '$(System.DefaultWorkingDirectory)\src\backend\Modilist\Modilist.Functions.ScheduledJobs'
  - task: AzureFunctionApp@1
    displayName: Deploy Functions
    inputs:
      azureSubscription: 'Microsoft Azure Sponsorship(cd6bc22e-8b3a-4c6e-9c03-03152a8567ea)'
      appType: 'functionApp'
      appName: 'func-scheduled-modilist-int-westeu'
      package: '$(System.DefaultWorkingDirectory)/Modilist.Functions.ScheduledJobs/**/*.zip'
      deploymentMethod: 'auto'
